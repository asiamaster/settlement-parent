server.port=8383

#mysql
spring.datasource.url=jdbc:mysql://172.16.10.246:3306/dili_settlement?createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=GMT%2B8
spring.datasource.username=appAccPayor
spring.datasource.password=iTDYVBtI6MX4NQ3Er2Oh

#redis
#spring.redis.host=172.16.10.246
#spring.redis.password=
#spring.redis.port=6379

#feign 超时配置
feign.okhttp.enabled=true
feign.client.config.default.connectTimeout=3000
feign.client.config.default.readTimeout=5000

#spring cloud
spring.cloud.nacos.discovery.server-addr=nacos.diligrp.com:8848
spring.cloud.nacos.discovery.group=MICROSERVICE
spring.cloud.nacos.discovery.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
management.endpoints.web.exposure.include=*

#配置统一权限登录页(选配)
error.page.loginPage=https://uap.diligrp.com/login/toLogin.html
#配置当前系统的首页(选配)
error.page.indexPage=https://settlement.diligrp.com/index.html
project.serverPath=https://settlement.diligrp.com

# self definition
uap.contextPath=https://uap.diligrp.com
settle.token.key=asdf@1234

# 回调是否签名 true or false
settlement.callback.sign=false
# 默认签名key
settlement.callback.signKey=qaz@wsx
# 回调次数
settlement.callback.times=3
# 处理回调数据线程数
settlement.callback.prepareThreads=2
# 回调处理线程数
settlement.callback.executeThreads=2
# 重新回调线程数
settlement.callback.cacheThreads=2
# 时间间隔 毫秒
settlement.callback.intervalMills=30000
# 任务线程睡眠时间 毫秒
settlement.callback.taskThreadSleepMills=20
# 守护线程睡眠时间 毫秒
settlement.callback.damonThreadSleepMills=10000

#MQ配置，不发消息可以不配置
spring.rabbitmq.host=172.16.10.246
spring.rabbitmq.port=5672
spring.rabbitmq.username=uap
spring.rabbitmq.password=xWDhgn6f7gncvjLaIrro
spring.rabbitmq.virtual-host=/uap

#Seata
seata.enabled=true
seata.application-id=settlement
seata.config.type=nacos
seata.registry.type=nacos
# seata 服务分组，要与服务端nacos-config.txt中service.vgroup_mapping的后缀对应
spring.cloud.alibaba.seata.tx-service-group=business-service-seata-service-group
seata.service.vgroup-mapping.business-service-seata-service-group=default
seata.registry.nacos.cluster=default
seata.registry.nacos.server-addr=nacos.diligrp.com:8848
seata.registry.nacos.namespace=6f5670aa-e1bf-4293-9ff6-9ccb9aaf039c
seata.config.nacos.namespace=6f5670aa-e1bf-4293-9ff6-9ccb9aaf039c
seata.config.nacos.server-addr=nacos.diligrp.com:8848
#logging.level.io.seata = debug

###Sentinel配置
# Sentinel自动化配置是否生效
spring.cloud.sentinel.eager=true
# Sentinel 控制台地址
spring.cloud.sentinel.transport.dashboard=sentinel.diligrp.com:8201
# 应用与Sentinel控制台交互的端口，应用本地会起一个该端口占用的HttpServer
spring.cloud.sentinel.transport.port=8202
# 日志文件保留天数
log.maxHistory=30